# # Пользователь вводит вещественное число, округлить его до 0, 2, 5 цифр после запятой
# number = float(input('Number: '))
# print(f'до 0: {round(number, 0)}\n'
#       f'до 2: {round(number, 2)}\n'
#       f'до 5: {round(number, 5)}')

# # Дан список из N элементов, вывести его последний элемент, в этом задании нельзя использовать отрицательный индекс
# some_list = [3, 5, 1, 6]
# print(some_list[len(some_list) - 1])

# # Пользователь вводит a, b, c после вводит формулу,
# # в которой может использовать a,b,c. Вывести результат формулы.
# # В этом задании можно использовать односимвольные имена для переменных
# a = int(input('a = '))
# b = int(input('b = '))
# c = int(input('c = '))
# formula = input('formula: ')
# print(eval(formula))

# # Дан список из N элементов, пользователь вводит 2 целых числа,
# # вывести часть списка индекс начала которого равен первому введенному числу,
# # а конец равен индексу второго введенного числа.
# some_list = [5, 6, 1, 0]
# int_1 = int(input('Number: '))
# int_2  = int(input('Number: '))
# print(some_list[int_1:int_2])

# # Пользователь вводит строку, удалить из строки все
# # повторяющиеся символы и вывести список с неповторяющимися символами
# line = input('Line: ')
# print(list(dict.fromkeys(line)))

# # Даны два множества, найти их пересечение и вывести разность первого и последнего элементов в пересечении
# first_set = {2, 4, 8, 5, 4, 6, 9}
# second_set = {3, 2, 8, 6}
# intersection = first_set.intersection(first_set, second_set)
# difference = list(intersection)[0] - list(intersection)[-1]
# print(f'Пересечение: {intersection}')
# print(f'Разность первого и последнего эл-тов: {difference}')

# # Даны два списка из N элементов каждый, создать из двух списков один,
# # который состоит из элементов первого и второго, удалить из него повторяющиеся
# list_1 = [1, 2, 6, 8]
# list_2 = [3, 2, 9]
# list_3 = list_1 + list_2
# print(list(dict.fromkeys(list_3)))

# # Дан кортеж из N элементов и список из N элементов вывести элементы которые есть как в кортеже так и в списке.
# some_tumple = (2, 5, 7, 1)
# some_list = [1, 3, 0, 7]
# print(f"Общие элементы: {list(set(some_tumple).intersection(set(some_tumple), set(some_list)))}")
#
